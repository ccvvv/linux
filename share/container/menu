#!/usr/bin/env bash
##############################
proot_container_main_menu() {
	case "$1" in
	restore | --restore) restore_tmoe_container ;;
	*) proot_container_menu ;;
	esac
}
################################
list_tmoe_containers() {
	ARCH_TYPE=${TRUE_ARCH_TYPE}
	rm ~/.config/tmoe-linux/across_architecture_container.txt 2>/dev/null
	case ${ARCH_TYPE} in
	mips* | riscv64)
		source ${TMOE_SHARE_DIR}/container/qemu/qemu-user
		git_clone_debian_ports_distro
		;;
	*) choose_which_gnu_linux_distro ;;
	esac
}
##############
across_architectures_container() {
	case ${TMOE_CHROOT} in
	true)
		case ${LINUX_DISTRO} in
		Android)
			getprop ro.product.model 2>/dev/null
			printf "%s %s\n" "ÈÉ®ÂàÜAndroidÁ≥ªÁªüÊó†${BLUE}/proc/sys/fs/binfmt_misc${RESET}, ÊïÖÊú¨Â∑•ÂÖ∑Êú™ÂØπAndroidÂºÄÊîæÊ≠§ÂäüËÉΩ„ÄÇ" "Â¶ÇÈúÄË∑®Êû∂ÊûÑËøêË°åchrootÂÆπÂô®,ÂàôËØ∑Êç¢Áî®GNU/LinuxÁ≥ªÁªüÔºåÊàñËá™Ë°åÂä†ËΩΩ${YELLOW}ÂÜÖÊ†∏Ê®°Âùó${RESET}„ÄÇ"
			printf "%s\n" "Sorry, you are using Android system, please modprobe binfmt_misc kernel module by yourself."
			press_enter_to_return
			list_tmoe_containers
			;;
		esac
		;;
	esac
	source ${TMOE_SHARE_DIR}/container/qemu/qemu-user
	tmoe_qemu_user_manager
}
#############
proot_container_menu_multi_langs() {
	proot_container_menu_en() {
		SELECTED_GNU_LINUX=$(whiptail --title "${CONTAINER_TYPE} CONTAINER" --menu "Your current architecture is ${TRUE_ARCH_TYPE}.\nDo you want to run on the same architecture or cross-architecture?" 0 50 0 \
			"1" "üí† ${TRUE_ARCH_TYPE} distros list" \
			"2" "üìë List installed" \
			"3" "‚öîÔ∏è Across architectures" \
			"4" "üîØ Restore ${CONTAINER_TYPE} container" \
			"5" "üìï Configuration & manual" \
			"0" "üåö Back to the main menu" \
			3>&1 1>&2 2>&3)
	}
	proot_container_menu_cn() {
		SELECTED_GNU_LINUX=$(whiptail --title "${CONTAINER_TYPE}ÂÆπÂô®" --menu "ÊÇ®ÊòØÊÉ≥Ë¶ÅËøêË°å${TRUE_ARCH_TYPE}Êû∂ÊûÑÁöÑÂÆπÂô®,ËøòÊòØË∑®Êû∂ÊûÑÂë¢Ôºü\nÈô§Âêë‰∏ãÂÖºÂÆπÂ§ñ,Ë∑®Êû∂ÊûÑËøêË°åÁöÑÊïàÁéáÂèØËÉΩÂÅè‰Ωé" 0 50 0 \
			"1" "üí† ${TRUE_ARCH_TYPE}ÂèëË°åÁâàÂàóË°®" \
			"2" "üìë List installed ÂΩìÂâçÂ∑≤ÂÆâË£ÖÂÆπÂô®ÂàóË°®" \
			"3" "‚öîÔ∏è Across architectures Ë∑®CPUÊû∂ÊûÑ" \
			"4" "üîØ Restore ÊÅ¢Â§ç/ËøòÂéü${CONTAINER_TYPE}ÂÆπÂô®" \
			"5" "üìï ÈÖçÁΩÆ‰∏éÊâãÂÜå" \
			"0" "üåö Back to the main menu ËøîÂõû‰∏ªËèúÂçï" \
			3>&1 1>&2 2>&3)
	}
	case ${TMOE_MENU_LANG} in
	zh_*UTF-8) proot_container_menu_cn ;;
	*) proot_container_menu_en ;;
	esac
	##############################
	case "${SELECTED_GNU_LINUX}" in
	0 | "") tmoe_manager_main_menu ;;
	1) list_tmoe_containers ;;
	2) list_installed_tmoe_containers ;;
	3) across_architectures_container ;;
	4) restore_tmoe_container ;;
	5) configure_tmoe_container ;;
	esac
	####################
	press_enter_to_return
	proot_container_menu_multi_langs
}
############
chroot_container_menu_multi_langs() {
	chroot_container_menu_en() {
		SELECTED_GNU_LINUX=$(whiptail --title "${CONTAINER_TYPE} CONTAINER" --menu "Chroot is not suitable for production environment,\nit is recommended to use systemd mode" 0 50 0 \
			"1" "üí† ${TRUE_ARCH_TYPE} distros list" \
			"2" "üìë List installed" \
			"3" "alpha: switch chroot mode" \
			"4" "ü•õ alpha:nspawn(systemd-container,supports systemctl)" \
			"5" "‚öîÔ∏è Across architectures" \
			"6" "üîØ Restore ${CONTAINER_TYPE} container" \
			"7" "üìï Configuration & manual" \
			"0" "üåö Back to the main menu" \
			3>&1 1>&2 2>&3)
	}
	chroot_container_menu_cn() {
		SELECTED_GNU_LINUX=$(whiptail --title "${CONTAINER_TYPE}ÂÆπÂô®" --menu "Áî±‰∫éÊôÆÈÄöÁöÑchrootÂú®umountÊó∂ÂèØËÉΩ‰ºö‰∫ßÁîübug, ÊïÖÂè™ÈÄÇÁî®‰∫éÊÅ¢Â§çÁéØÂ¢É,\n‰∏çÈÄÇÁî®‰∫éÁîü‰∫ßÁéØÂ¢É,Âª∫ËÆÆÊÇ®Â∞ÜÊôÆÈÄöÁöÑchrootÂàáÊç¢‰∏∫systemdÊ®°Âºè." 0 50 0 \
			"1" "üí† ${TRUE_ARCH_TYPE}ÂèëË°åÁâàÂàóË°®" \
			"2" "üìë List installed ÂΩìÂâçÂ∑≤ÂÆâË£ÖÂÆπÂô®ÂàóË°®" \
			"3" "alphaÂÜÖÊµã:ÂàáÊç¢chrootÈªòËÆ§Ê®°Âºè" \
			"4" "ü•õ alphaÂÜÖÊµã: nspawn(systemdÂÆπÂô®,ÊîØÊåÅsystemctl)" \
			"5" "‚öîÔ∏è Across architectures Ë∑®CPUÊû∂ÊûÑ" \
			"6" "üîØ Restore ÊÅ¢Â§ç/ËøòÂéü${CONTAINER_TYPE}ÂÆπÂô®" \
			"7" "üìï ÈÖçÁΩÆ‰∏éÊâãÂÜå" \
			"0" "üåö Back to the main menu ËøîÂõû‰∏ªËèúÂçï" \
			3>&1 1>&2 2>&3)
	}
	case ${TMOE_MENU_LANG} in
	zh_*UTF-8) chroot_container_menu_cn ;;
	*) chroot_container_menu_en ;;
	esac
	##############################
	case "${SELECTED_GNU_LINUX}" in
	0 | "") tmoe_manager_main_menu ;;
	1) list_tmoe_containers ;;
	2) list_installed_tmoe_containers ;;
	3) switch_chroot_default_mode ;;
	4)
		case ${LINUX_DISTRO} in
		Android) systemd_nspawn_env ;;
		*) switch_chroot_default_mode ;;
		esac
		;;
	999)
		systemd_nspawn_env
		;;
	5) across_architectures_container ;;
	6) restore_tmoe_container ;;
	7) configure_tmoe_container ;;
	esac
	####################
	press_enter_to_return
	chroot_container_menu_multi_langs
}
############
switch_chroot_default_mode() {
	printf "%s\n" "${RED}Sorry,${GREEN}this feature${YELLOW} is still ${BLUE}in alpha${RESET}"
}
proot_container_menu() {
	source ${TMOE_SHARE_DIR}/container/list
	check_proot_or_chroot
	SYSTEMD_NSPAWN=false
	RETURN_TO_WHERE='proot_container_menu'
	RETURN_TO_WHERE_02=${RETURN_TO_WHERE}
	case ${TMOE_CHROOT} in
	true) chroot_container_menu_multi_langs ;;
	*) proot_container_menu_multi_langs ;;
	esac
}
##################
systemd_nspawn_env() {
	if [ ! $(command -v systemd-nspawn) ]; then
		printf "${YELLOW}%s${RESET}\n" "Do you want to install systemd-container?${PURPLE}[Y/n]"
		printf "${GREEN}%s ${BLUE}%s${RESET}\n" "${TMOE_INSTALLATION_COMMAND}" "systemd-container"
		do_you_want_to_continue
		case ${LINUX_DISTRO} in
		Android)
			printf "%s\n" "Sorry,this feature does not support ${PURPLE}Android${RESET} system."
			printf "%s\n" "ËØ∑Êç¢Áî®${GREEN}GNU/Linux${RESET}Á≥ªÁªüÔºÅÔºÅÔºÅ"
			;;
		*) ${TMOE_INSTALLATION_COMMAND} systemd-container ;;
		esac
	fi
	if [ ! $(command -v dbus-uuidgen) ]; then
		printf "${RED}%s${RESET}\n" "EORRORÔºÅYOU DID NOT INSTALL DBUS."
		printf "${GREEN}%s ${BLUE}%s${RESET}\n" "${TMOE_INSTALLATION_COMMAND}" "dbus"
		press_enter_to_return
		chroot_container_menu_multi_langs
		#${TMOE_INSTALLATION_COMMAND} dbus
	fi
	case ${LINUX_DISTRO} in
	Android)
		press_enter_to_return
		chroot_container_menu_multi_langs
		;;
	esac
	SYSTEMD_NSPAWN=true
	list_installed_tmoe_containers
}
###############
restore_tmoe_container() {
	source ${TMOE_SHARE_DIR}/compression/restore
	restore_gnu_linux_container
}
configure_tmoe_container() {
	source ${TMOE_SHARE_DIR}/configuration/menu
	configure_tmoe_container
}
####################
proot_container_main_menu
