#!/usr/bin/env bash
${TMOE_CHROOT_PREFIX} mkdir -pv ${TMOE_STARTUP_DIR}
TMP_FILE="${TMPDIR}/.TMOE_CHROOT_STARTUP"
cat >${TMP_FILE} <<-ENDOFTMOECHROOT
	#!/usr/bin/env bash
	##################
	CHROOT_USER=root
	#You can specify a user. Default is root
	#您可以指定用户，例如root或ubuntu，默认为root
	#Sie können einen Benutzer angeben
	################
	LOAD_ENV_FILE=true
	#Load the environment variable file when starting the container. Default is true.
	################
	MOUNT_SD=true
	MOUNT_TERMUX=true
	MOUNT_TF=true
	#If the parameter value is "false", the relevant directory will not be mounted. Default is true.
	#挂载sd，默认为true
	################
	DEFAULT_LOGIN_SHELL_01=zsh
	#The default login shell is zsh.
	#默认登录shell是zsh
	#Die Standard-Login-Shell ist zsh.

	DEFAULT_LOGIN_SHELL_02=fish
	DEFAULT_LOGIN_SHELL_03=bash
	DEFAULT_LOGIN_SHELL_04=ash
	DEFAULT_LOGIN_SHELL_05=su
	#The lower the number, the higher the priority.
	################
	main() {
	    case "\$1" in
	    i* | -i* | -I*)
	        tmoe t
	        exit 0
	        ;;
	    -vnc* | vnc*) startx11vnc ;;
	    -n* | novnc*) novnc ;;
	    -x) startxsdl ;;
	    *) start_tmoe_gnu_linux_chroot_container ;;
	    esac
	}
	##############
	start_tmoe_gnu_linux_chroot_container() {
	    case \$(uname -o) in
	    Android) ;;
	    *)
	        case \$(id -u) in
	        0) ;;
	        *)
	            if [ \$(command -v sudo) ]; then
	                sudo su -c "bash ${DEBIAN_CHROOT}/usr/local/etc/tmoe-linux/container/tmoe-linux-container"
	            else
	                su -c "bash ${DEBIAN_CHROOT}/usr/local/etc/tmoe-linux/container/tmoe-linux-container"
	            fi
	            exit 1
	            ;;
	        esac
	        ;;
	    esac
	    ########
	    TMOE_LOCALE_FILE="${CONFIG_FOLDER}/locale.txt"
		DEFAULT_SHELL_CONF=${CONFIG_FOLDER}/default_shell.conf
	    PROC_FD_PATH="/proc/self/fd"
	    #########
	    detect_mount() {
	        MOUNT_DIR="\$1"
	        if \$(grep -q " \${MOUNT_DIR%/} " /proc/mounts); then
	            return 0
	        else
	            return 1
	        fi
	    }
	    ##########
		#arch-linux挂载自身
		if ! detect_mount "${DEBIAN_CHROOT}/"; then
		   su -c "mount --rbind ${DEBIAN_CHROOT} ${DEBIAN_CHROOT}/ &>/dev/null"
		   su -c "mount -o remount,exec,suid,dev ${DEBIAN_CHROOT}"
		 fi
		 #########
		if [[ -f ${DEBIAN_CHROOT}/usr/bin/sudo ]];then
			[[ ! -s \${DEFAULT_SHELL_CONF} ]] || source \${DEFAULT_SHELL_CONF}
		   if [[ -z \${TMOE_SHELL} ]]; then
				for i in \${DEFAULT_LOGIN_SHELL_01} \${DEFAULT_LOGIN_SHELL_02} \${DEFAULT_LOGIN_SHELL_03} \${DEFAULT_LOGIN_SHELL_04} \${DEFAULT_LOGIN_SHELL_05};do
					if [[ -f ${DEBIAN_CHROOT}/bin/\${i} ]];then
						TMOE_SHELL="/bin/\${i}"
						break
					fi
				done
				#[[ ! -f ${DEBIAN_CHROOT}/usr/bin/\${DEFAULT_LOGIN_SHELL_01} ]] || TMOE_SHELL="/usr/bin/\${DEFAULT_LOGIN_SHELL_01}"
			fi
			if [[ -z \${TMOE_SHELL} ]]; then
				#ALPINE ash shell is a link.
				for i in \${DEFAULT_LOGIN_SHELL_01} \${DEFAULT_LOGIN_SHELL_02} \${DEFAULT_LOGIN_SHELL_03} \${DEFAULT_LOGIN_SHELL_04} \${DEFAULT_LOGIN_SHELL_05};do
					if [[ -L ${DEBIAN_CHROOT}/bin/\${i} ]];then
						TMOE_SHELL="/bin/\${i}"
						break
					fi
				done
				if [[ -z \${TMOE_SHELL} ]]; then
					TMOE_SHELL="/bin/su"
				fi
			fi
	        set -- "\${TMOE_SHELL}" "-l" "\${@}"
			set -- "/usr/bin/sudo" "-iu" "\${CHROOT_USER}" "\${@}"
		else
			if [[ -e ${DEBIAN_CHROOT}/bin/su ]];then
				set -- "/bin/su" "-" "\${CHROOT_USER}" "\${@}"
			elif [[ -e ${DEBIAN_CHROOT}/bin/bash ]];then
				set -- "/bin/bash" "-l" "\${@}"
			else
				set -- "/bin/sh" "-l" "\${@}"
			fi
		fi

	    if [ -e "\${TMOE_LOCALE_FILE}" ]; then
	        set -- "LANG=\$(head -n 1 \${TMOE_LOCALE_FILE})" "\${@}"
	    else
	        set -- "LANG=zh_CN.UTF-8" "\${@}"
	    fi
	    ############
	    mount_01() {
	        su -c "mount -o bind /\${i} ${DEBIAN_CHROOT}/\${i}"
	    }
	    #########
	    mkdir_01() {
	        [[ -e "/\${i}" ]] || su -c "mkdir -pv /\${i}"
	    }
	    ########
	    #PS1='\u:\w$ '
		HOST_NAME="localhost"
		HOST_NAME_FILE="${DEBIAN_CHROOT}/etc/hostname"
		if [[ -s \${HOST_NAME_FILE} ]];then
		   HOST_NAME=\$(sed -n p \${HOST_NAME_FILE})
		else
			[[ ! \$(command -v hostname) ]] || HOST_NAME=\$(hostname -f)
		fi
		CONTAINER_ENV_FILE="${DEBIAN_CHROOT}/usr/local/etc/tmoe-linux/environment/container.env"
		unset CONTAINER_BIN_PATH
	    if [[ -s \${CONTAINER_ENV_FILE} && \${LOAD_ENV_FILE} = true ]]; then
	        CONTAINER_BIN_PATH=\$(sed -E 's@export\s+@@;/#/d' \${CONTAINER_ENV_FILE} | grep '^PATH=\"' | grep '\${PATH:+:\${PATH}}' | sed 's@\${PATH:+:\${PATH}}\"@:@;s@PATH=\"@@')
	        for i in "\$(sed -E 's@export\s+@@;/#/d;/^PATH=/d' \${CONTAINER_ENV_FILE})"; do
	            if [[ -n \${i} ]];then
	               set -- "\${i}" "\${@}"
	            fi
	        done
	    fi
		if [[ \${CHROOT_USER} = root ]];then
			set -- "HOME=/root" "\${@}"
			set -- "PATH=\${CONTAINER_BIN_PATH}/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/games:/usr/local/games" "\${@}"
		else
			set -- "PATH=\${CONTAINER_BIN_PATH}/usr/local/bin:/bin:/usr/bin:/usr/games:/usr/local/games" "\${@}"
		fi
		if [[ -n \${TMOE_SHELL} ]];then
			set -- "SHELL=\${TMOE_SHELL}" "\${@}"
		else
			set -- "SHELL=/bin/zsh" "\${@}"
		fi
	    set -- "/usr/bin/env" "-i" "PULSE_SERVER=tcp:127.0.0.1:4713" "DISPLAY=:0.0" "TMPDIR=/tmp" "TMOE_PROOT=false" "TMOE_CHROOT=true" "GTK_IM_MODULE=fcitx" "QT_IM_MODULE=fcitx" "XMODIFIERS='@im=fcitx'" "SDL_IM_MODULE=fcitx" "TERM=xterm-256color" "HOSTNAME=\${HOST_NAME}" "\${@}"
	    for i in dev proc sys dev/pts dev/shm etc/gitstatus; do
	        if ! detect_mount "${DEBIAN_CHROOT}/\${i}"; then
	            case \${i} in
	            dev) mount_01 ;;
	            proc) su -c "mount -t \${i} \${i} ${DEBIAN_CHROOT}/\${i}" ;;
	            sys) su -c "mount -t \${i}fs \${i}fs ${DEBIAN_CHROOT}/\${i}" ;;
	            dev/pts)
	                if ! detect_mount "/\${i}"; then
	                    mkdir_01
	                    su -c "mount -o rw,nosuid,noexec,gid=5,mode=620,ptmxmode=000 -t devpts devpts /\${i}"
	                fi
	                su -c "mount -t devpts devpts ${DEBIAN_CHROOT}/\${i}"
	                ;;
	            dev/shm)
	                if ! detect_mount "/\${i}"; then
	                    mkdir_01
	                    su -c "mount -o rw,nosuid,nodev,mode=1777 -t tmpfs tmpfs /\${i}"
	                fi
	                mount_01
	                ;;
				etc/gitstatus) su -c "mount -o bind ${CONFIG_FOLDER}/gitstatus ${DEBIAN_CHROOT}/\${i}" ;;
	            esac
	        fi
	    done
	    unset i
	    ########
	    for i in /dev/fd /dev/stdin /dev/stout /dev/sterr /dev/tty0; do
	        if [ ! -e \${i} ] && [ ! -h \${i} ]; then
	            case \${i} in
	            /dev/fd) su -c "ln -s \${PROC_FD_PATH} \${i} &>/dev/null" ;;
	            /dev/stdin) su -c "ln -s \${PROC_FD}/0 \${i} &>/dev/null" ;;
	            /dev/stdout) su -c "ln -s \${PROC_FD}/1 \${i} &>/dev/null" ;;
	            /dev/stderr) su -c "ln -s \${PROC_FD}/2 \${i} &>/dev/null" ;;
	            /dev/tty0)
	                #if [ -e "/dev/ttyGS0" ]; then
	                # su -c "ln -s /dev/ttyGS0 /\${i} &>/dev/null"
	                #else
	                su -c "ln -s /dev/null \${i} &>/dev/null"
	                #fi
	                ;;
	            esac
	        fi
	    done
	    unset i
	    ###############
	    for i in tf termux sd; do
	        if ! detect_mount "${DEBIAN_CHROOT}/media/\${i}"; then
	            case \${i} in
	            tf)
				if [[ \${MOUNT_TF} = true ]];then
	                TF_CARD_LINK="${HOME}/storage/external-1"
	                if [ -h "\${TF_CARD_LINK}" ]; then
	                    TF_CARD_FOLDER=\$(readlink \${TF_CARD_LINK} | awk -F '/' '{print \$3}')
	                    if [ "\$(su -c "ls /mnt/media_rw/\${TF_CARD_FOLDER}")" ]; then
	                        su -c "mount -o bind /mnt/media_rw/\${TF_CARD_FOLDER} ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
	                    else
	                        su -c "mount -o bind \${TF_CARD_LINK} ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
	                    fi
	                fi
				fi
	                ;;
	            #######
	            termux)
				if [[ \${MOUNT_TERMUX} = true ]];then
	                [[ ! -d "/data/data/com.termux/files/home" ]] || su -c "mount -o bind /data/data/com.termux/files/home ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
				fi
	                ;;
	            ###########
	            sd)
				if [[ \${MOUNT_SD} = true ]];then
	                if [ "\$(su -c "ls /data/media/0" 2>/dev/null)" ]; then
	                    su -c "mount -o bind /data/media/0 ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
	                elif [ -e "/storage/self/primary" ]; then
	                    su -c "mount -o bind /storage/self/primary ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
	                elif [ -e "/sdcard" ] || [ -h "/sdcard" ]; then
	                    su -c "mount -o bind /sdcard ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
					elif [ -e "${HOME}/Download" ]; then
	                    su -c "mount -o bind ${HOME}/Download ${DEBIAN_CHROOT}/media/\${i} &>/dev/null"
	                fi
				fi 
	                ;;
	            esac
	        fi
	    done
	    unset i
		 ###########
	     set -- "${DEBIAN_CHROOT}" "\${@}"
	     set -- "chroot" "\${@}"
	     unset LD_PRELOAD
		 TMOE_CHROOT_EXEC="\${@}"
		 su -c "\${TMOE_CHROOT_EXEC}"
	    }
	    main "\${@}"
ENDOFTMOECHROOT
case $(uname -o) in
Android) termux-fix-shebang ${TMP_FILE} ;;
esac
chmod a+rx ${TMP_FILE}
${TMOE_CHROOT_PREFIX} mv -f ${TMP_FILE} ${TMOE_STARTUP_SCRIPT}
#${TMOE_CHROOT_PREFIX} chmod a+rx ${TMOE_STARTUP_SCRIPT}
ln -sf ${TMOE_SHARE_DIR}/container/debian/debian ${PREFIX}/bin
