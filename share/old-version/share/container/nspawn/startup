#!/usr/bin/env bash
###################
MACHINE_NAME=$(printf "%s\n" ${DEBIAN_FOLDER} | sed 's@_@-@g') #此处并非重复操作
unset TMOE_SD_DIR
if egrep -q '^root:(\*|\!):' ${DEBIAN_CHROOT}/etc/shadow; then
    ${TMOE_CHROOT_PREFIX} sed -i -E 's@(^root):.:@\1::@g' ${DEBIAN_CHROOT}/etc/shadow
fi
# case $(${TMOE_CHROOT_PREFIX} cat ${DEBIAN_CHROOT}/etc/hostname) in
# localhost | LXC_NAME | "")
#     # ${TMOE_CHROOT_PREFIX} printf "%s\n" "${MACHINE_NAME}" >>${DEBIAN_CHROOT}/etc/hostname
#     # ${TMOE_CHROOT_PREFIX} printf "%s\n" "127.0.0.1       ${MACHINE_NAME}" >>${DEBIAN_CHROOT}/etc/hosts
#     ;;
# esac
printf "%s\n" "${MACHINE_NAME}" >${TMPDIR}/.tmp_hostname
${TMOE_CHROOT_PREFIX} cp ${TMPDIR}/.tmp_hostname ${DEBIAN_CHROOT}/tmp
${TMOE_CHROOT_PREFIX} mv ${TMPDIR}/.tmp_hostname ${DEBIAN_CHROOT}/etc

if [[ -e "${DEBIAN_CHROOT}/etc/machine-id" ]]; then
    ${TMOE_CHROOT_PREFIX} rm -f ${DEBIAN_CHROOT}/etc/machine-id
fi
TMP_FILE="${TMPDIR}/.TMOE_NSPAWN_STARTUP"
cat >${TMP_FILE} <<-ENDOFTMOECHROOT
#!/usr/bin/env bash
###################
SYSTEMD_BOOT=false
#If the vaule is true, then you can run systemctl command in the container. Default is false
#若为true,则允许在容器内执行systemctl。注：建议以非root用户进行登录。
###################
CHROOT_USER=root
#You can specify a user. Default is root
#您可以指定用户，例如root或ubuntu，默认为root
#Sie können einen Benutzer angeben

CHROOT_BIN="system"
#You can specify the path where the binary file of systemd-nspawn is located. If the vaule is system, it will use the default path of the system. You can also enter the full path. For example, "\${PREFIX}/bin/systemd-nspawn"
#您可以自行编译systemd-nspawn,并指定其二进制文件所在路径。当此变量值为system时，将使用系统默认systemd-nspawn二进制文件所在路径；当为prefix时，将使用 "${PREFIX}/bin/systemd-nspawn"。您也可以输入完整路径,例如"/usr/local/bin/systemd-nspawn"
###################
#mount dir
#挂载相关目录

MOUNT_SD=true
SD_DIR_01="/media/sd"
SD_DIR_02="\${HOME}/sd"
SD_DIR_03="\${HOME}/Downloads"
SD_DIR_04="\${HOME}/Download"
SD_DIR_05="/sd"
SD_DIR_06="/sdcard"
SD_MOUNT_POINT="/media/sd"
#The lower the number, the higher the priority. The highest priority directory will be mounted to the "/media/sd".
#挂载sd，默认为true，SD_DIR为宿主机sd目录。优先级别高，且存在相应目录时，才会被挂载。默认挂载点为容器内部的"/media/sd"

MOUNT_DOCKER_DIR=true
TMOE_DOCKER_DIR="/media/docker"
#If the value of "MOUNT_DOCKER_DIR" is "false", the relevant directory will not be mounted. Default is true.

CONTAINER_ENV_FILE="${DEBIAN_CHROOT}/usr/local/etc/tmoe-linux/environment/container.env"
LOAD_ENV_FILE=true

TMOE_LOCALE_FILE="${CONFIG_FOLDER}/locale.txt"
###################
unset CONTAINER_BIN_PATH
if [[ \${SYSTEMD_BOOT} = true ]]; then
    set -- "\${@}" "--boot"
fi
if [[ \${CHROOT_USER} != root ]];then
    set -- "\${@}" "--user" "\${CHROOT_USER}"
fi
set -- "\${@}" "--directory" "${DEBIAN_CHROOT}"
set -- "\${@}" "--uuid" "$(dbus-uuidgen)"
#arch不要设置将其设置为pick
set -- "\${@}" "--private-users=no"
set -- "\${@}" "--machine" "${MACHINE_NAME}"
set -- "\${@}" "--link-journal" "auto"
set -- "\${@}" "--resolv-conf" "auto"
set -- "\${@}" "--timezone" "auto"
set -- "\${@}" "--register" "yes"
set -- "\${@}" "--notify-ready" "yes"
set -- "\${@}" "--setenv" "TMOE_CHROOT=true"
set -- "\${@}" "--setenv" "TMOE_PROOT=false"
set -- "\${@}" "--setenv" "TMOE_DOCKER=false"
#set -- "\${@}" "--setenv" "PULSE_SERVER=unix:/usr/lib/systemd/user/pulseaudio.socket"
set -- "\${@}" "--setenv" "PULSE_SERVER=tcp:127.0.0.1:4713"
set -- "\${@}" "--setenv" "DISPLAY=:0.0"
set -- "\${@}" "--setenv" "GTK_IM_MODULE=fcitx"
set -- "\${@}" "--setenv" "QT_IM_MODULE=fcitx"
set -- "\${@}" "--setenv" "XMODIFIERS=\@im=fcitx"
set -- "\${@}" "--setenv" "SDL_IM_MODULE=fcitx"
set -- "\${@}" "--setenv" "CONTAINER_SYSTEMD=true"
set -- "\${@}" "--setenv" "TERM=xterm-256color"

if [[ -e "\${TMOE_LOCALE_FILE}" ]]; then
    set -- "\${@}" "--setenv" "LANG=\$(head -n 1 \${TMOE_LOCALE_FILE})"
fi

if [[ -s \${CONTAINER_ENV_FILE} && \${LOAD_ENV_FILE} = true ]]; then
    CONTAINER_BIN_PATH=\$(sed -E 's@export\s+@@;/#/d' \${CONTAINER_ENV_FILE} | grep '^PATH=\"' | grep '\${PATH:+:\${PATH}}' | sed 's@\${PATH:+:\${PATH}}\"@:@;s@PATH=\"@@')
    OLD_IFS="\${IFS}"
    IFS=\$'\n'
    CONTAINER_ENV_VAR="\$(sed -E 's@export\s+@@;/#/d;/^PATH=/d' \${CONTAINER_ENV_FILE})"
    # Do not use double quotes in CONTAINER_ENV_VAR in the for statement 
    for i in \${CONTAINER_ENV_VAR}; do
        if [[ -n \${i} ]];then
           set -- "\${@}" "--setenv" "\${i}"
        fi
    done
    IFS="\${OLD_IFS}"    
fi

if [[ \${CHROOT_USER} = root || -z \${CHROOT_USER} ]]; then
	set -- "\${@}" "--setenv" "PATH=\${CONTAINER_BIN_PATH}/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/games:/usr/local/games"
else
	set -- "\${@}" "--setenv" "PATH=\${CONTAINER_BIN_PATH}/usr/local/bin:/bin:/usr/bin:/usr/games:/usr/local/games"
fi


if [[ \${MOUNT_SD} = true ]]; then
    for i in \${SD_DIR_01} \${SD_DIR_02} \${SD_DIR_03} \${SD_DIR_04} \${SD_DIR_05} \${SD_DIR_06}; do
        if [[ -d \${i} ]];then
            TMOE_SD_DIR=\${i}
            break
        fi
    done
    [[ -z \${TMOE_SD_DIR} ]] || set -- "\${@}" "--bind" "\${TMOE_SD_DIR}:\${SD_MOUNT_POINT}"
fi
if [[ \${MOUNT_DOCKER_DIR} = true ]]; then
    [[ ! -e "\${TMOE_DOCKER_DIR}" ]] || set -- "\${@}" "--bind" "\${TMOE_DOCKER_DIR}"
fi
if [[ -n \${CHROOT_BIN} ]]; then
    if [[ \${CHROOT_BIN} = system ]]; then
        set -- "systemd-nspawn" "\${@}"
    elif [[ \${CHROOT_BIN} = termux || \${CHROOT_BIN} = prefix ]]; then
        set -- "\${PREFIX}/bin/systemd-nspawn" "\${@}"
    else
        set -- "\${CHROOT_BIN}" "\${@}"
    fi
else
    set -- "systemd-nspawn" "\${@}"
fi
unset LD_PRELOAD
TMOE_NSPAWN_EXEC="exec \${@}"
su -c "\${TMOE_NSPAWN_EXEC}"
#exit 0
ENDOFTMOECHROOT

case $(uname -o) in
Android) termux-fix-shebang ${TMP_FILE} ;;
esac
${TMOE_CHROOT_PREFIX} cp -f ${TMP_FILE} ${TMOE_STARTUP_SCRIPT}
${TMOE_CHROOT_PREFIX} mv -f ${TMP_FILE} ${TMOE_STARTUP_DIR}/nspawn
